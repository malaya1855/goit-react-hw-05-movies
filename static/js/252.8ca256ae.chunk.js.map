{"version":3,"file":"static/js/252.8ca256ae.chunk.js","mappings":"+MAEaA,GAAiBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,oJ,SCe3B,EAdkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAACP,EAAD,CAAgBQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAA1D,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,C,wGCdYI,EAASZ,EAAAA,EAAAA,KAAH,uHAQNa,EAAcb,EAAAA,EAAAA,MAAH,mLAUXc,EAAYd,EAAAA,EAAAA,OAAH,wL,kBCbTe,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OACE,UAACP,EAAD,CAAQI,SAVW,SAAAI,GACnBA,EAAGC,iBACEH,EAKLF,EAASE,GAJPI,MAAM,mCAKT,EAEC,WACE,SAACT,EAAD,CAAaU,KAAK,OAAOC,SAdN,SAAAJ,GACrBD,EAASC,EAAGK,OAAOC,MACpB,KAaG,SAACZ,EAAD,CAAWS,KAAK,SAAhB,sBAGL,E,4CCcD,EAhCe,WACb,OAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAeyB,EAAf,KACA,GAA8BV,EAAAA,EAAAA,WAAS,GAAvC,eAAOW,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,IACFE,EAAAA,EAAAA,IAAYF,GAAYG,MAAK,SAAAC,GAC3BX,EAAUW,EAAKC,SACfV,GAAW,EACZ,GAEJ,GAAE,CAACE,IAKJ,OACE,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,4BACE,SAAC3B,EAAD,CAAaC,SAPF,SAAAE,GACfc,EAAgB,CAAEd,MAAAA,GACnB,IAMMU,GACC,SAACc,EAAA,EAAD,IACoB,IAAlBxC,EAAOyC,QACT,SAAC,IAAD,CAAWzC,OAAQA,KAEnB,SAAC,IAAD,qDAKT,C","sources":["components/MovieSearchList/MovisSearchList.styled.jsx","components/MovieSearchList/MovieSearchList.jsx","components/MovieSearch/MovieSearch.styled.jsx","components/MovieSearch/MovieSearch.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const SearchListItem = styled(Link)`\n  text-decoration: none;\n  :link,\n  :visited {\n    color: #000;\n  }\n\n  :hover,\n  :focus {\n    color: #be3455;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { SearchListItem } from './MovisSearchList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <SearchListItem to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </SearchListItem>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const Search = styled.form`\n  margin-left: 20px;\n  margin-top: 20px;\n  width: 500px;\n  height: 30px;\n  display: flex;\n`;\n\nexport const SearchInput = styled.input`\n  background: #fff;\n  width: 80%;\n  color: #777675;\n  padding-left: 20px;\n  padding-right: 20px;\n  border: 1px solid #aaaaaa;\n  border-radius: 5px;\n`;\n\nexport const SearchBtn = styled.button`\n  width: 20%;\n  color: #fff;\n  background: #be3455;\n  border: none;\n  right: 0;\n  border-radius: 5px;\n  :hover,\n  :focus {\n    font-weight: bold;\n  }\n`;\n","import {\n  Search,\n  SearchBtn,\n  SearchInput,\n} from 'components/MovieSearch/MovieSearch.styled';\nimport { useState } from 'react';\n\nexport const MovieSearch = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onChangeSearch = ev => {\n    setQuery(ev.target.value);\n  };\n  const onSubmitForm = ev => {\n    ev.preventDefault();\n    if (!query) {\n      alert('Please input your search request');\n      return;\n    }\n\n    onSubmit(query);\n  };\n  return (\n    <Search onSubmit={onSubmitForm}>\n      <SearchInput type=\"text\" onChange={onChangeSearch} />\n      <SearchBtn type=\"submit\">Search</SearchBtn>\n    </Search>\n  );\n};\n","import { MovieSearch } from 'components/MovieSearch/MovieSearch';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'utilities/MoviaApi';\n\nimport { Suspense } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieSearchList/MovieSearchList';\nimport { ErrorText } from 'components/Reviews/Reviews.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    const queryMovie = searchParams.get('query');\n    if (queryMovie) {\n      searchMovie(queryMovie).then(data => {\n        setMovies(data.results);\n        setLoading(false);\n      });\n    }\n  }, [searchParams]);\n  const onSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <Suspense fallback={<Loader />}>\n      <div>\n        <MovieSearch onSubmit={onSubmit} />\n        {loading ? (\n          <Loader />\n        ) : movies.length !== 0 ? (\n          <MovieList movies={movies} />\n        ) : (\n          <ErrorText>There are no movies by your search</ErrorText>\n        )}\n      </div>\n    </Suspense>\n  );\n};\nexport default Movies;\n"],"names":["SearchListItem","styled","Link","movies","location","useLocation","map","movie","to","id","state","from","title","Search","SearchInput","SearchBtn","MovieSearch","onSubmit","useState","query","setQuery","ev","preventDefault","alert","type","onChange","target","value","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","useEffect","queryMovie","get","searchMovie","then","data","results","Suspense","fallback","Loader","length"],"sourceRoot":""}